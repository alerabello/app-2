name: Build and Push to ECR + Deploy ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: fuelpoint-developer-app-2
  ECS_CLUSTER: ecs-cluster-developer
  ECS_SERVICE: SVG-Service-2-ECS

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: develop

    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v3

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build com Maven
        run: mvn clean package -DskipTests

      - name: Login no AWS ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Criar tags da imagem
        id: ecr
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_URL=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY
          COMMIT_SHA=${GITHUB_SHA::7}
          echo "REPO_URL=$ECR_URL" >> $GITHUB_ENV
          echo "IMAGE_TAG=$COMMIT_SHA" >> $GITHUB_ENV
          echo "ECR_URL=$ECR_URL" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t $REPO_URL:latest -t $REPO_URL:$IMAGE_TAG .

      - name: Push Docker images
        run: |
          docker push $REPO_URL:latest
          docker push $REPO_URL:$IMAGE_TAG

      - name: Deploy ECS com nova imagem
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --force-new-deployment \
            --region $AWS_REGION
